# unpack busybox, util functions and stuff
export TMPDIR="/dev/tmp"
export INSTALLER="$TMPDIR/install"
export OUTFD="$2"
export ZIPFILE="$3"
mkdir -p "$INSTALLER" || exit 1
for file in scripts/util_functions.sh scripts/busybox; do
    unzip -o "${ZIPFILE}" "$file" -d "${INSTALLER}/" || exit 1
done

# uhrm idk bro:
chmod +x scripts/util_functions.sh

# import the functions and variables.
source "${INSTALLER}/scripts/util_functions.sh"

# put your flashable images list here:
flashables="/dev/block/by-name/system -> tsukika/system.img -> raw "

# device codename / model detection, better put your device's codename / model for checking it
# the "|" works as a separator.
supportedDeviceCodenameList="surya|karna"

# to check build id and abort if the id is older.
checkBuildID "20250614"

# now the real functions start!
consolePrint "########################################################################"
consolePrint "   _  _     _____          _    _ _"
consolePrint " _| || |_  |_   _|__ _   _| | _(_) | ____ _ "
consolePrint "|_  ..  _|   | |/ __| | | | |/ / | |/ / _  |"
consolePrint "|_      _|   | |\__ \ |_| |   <| |   < (_| |"
consolePrint "  |_||_|     |_||___/\__,_|_|\_\_|_|\_\__,_|"
consolePrint "   "
consolePrint "########################################################################"
getprop ro.product.system.device | grep -qE "${supportedDeviceCodenameList}" || abort "This build is made for ${supportedDeviceCodenameList} not for your device."
unmountPartitions && consolePrint "Successfully unmounted partitions!" || abort "Failed to unmount partitions, please try again after a reboot."
consolePrint "Tsukika - Eternal Bliss for REF | Built by DOOM"
[ "$(acpi)" -le "35" ] && abort "Please atleast charge your device to 40% to continue the installation"
set -- $flashables
while [ "$1" ]; do
    image="$1"
    shift
    delimiter="$1"
    shift
    target="$1"
    shift
    shift
    imageType="$1"
    shift
    if [ "$delimiter" = "->" ]; then
        consolePrint "Patching $(basename "${image}" .img) image unconditionally..."
        installImages "$image" "$target" "${imageType}"
    else
        abort "Error: Expected '->' but got '$delimiter'"
    fi
done
consolePrint "Handling aroma actions.."
if [ "$(getAromaProp "item.1.0" "/tmp/checkbox0.prop")" == "1" ]; then
    unzip -o "${ZIPFILE}" "IndexOneSourceOne:" "${INSTALLER}/"
    mv "${INSTALLER}/IndexOneSourceOne:" "IndexOneExtractOne:"
fi
if [ "$(getAromaProp "item.1.1" "/tmp/checkbox0.prop")" == "1" ]; then
    unzip -o "${ZIPFILE}" "IndexOneSourceTwo:" "${INSTALLER}/"
    mv "${INSTALLER}/IndexOneSourceTwo:" "IndexOneExtractTwo:"
fi
if [ "$(getAromaProp "item.1.0" "/tmp/checkbox1.prop")" == "1" ]; then
    unzip -o "${ZIPFILE}" "IndexTwoSourceOne:" "${INSTALLER}/"
    mv "${INSTALLER}/IndexTwoSourceOne:" "IndexTwoExtractOne:"
fi
if [ "$(getAromaProp "item.1.1" "/tmp/checkbox1.prop")" == "1" ]; then
    unzip -o "${ZIPFILE}" "IndexTwoSourceTwo:" "${INSTALLER}/"
    mv "${INSTALLER}/IndexTwoSourceTwo:" "IndexTwoExtractTwo:"
fi
if [ "$(getAromaProp "item.1.0" "/tmp/checkbox2.prop")" == "1" ]; then
    unzip -o "${ZIPFILE}" "IndexThreeSourceOne:" "${INSTALLER}/"
    mv "${INSTALLER}/IndexThreeSourceOne:" "IndexThreeExtractOne:"
fi
if [ "$(getAromaProp "item.1.1" "/tmp/checkbox2.prop")" == "1" ]; then
    unzip -o "${ZIPFILE}" "IndexThreeSourceTwo:" "${INSTALLER}/"
    mv "${INSTALLER}/IndexThreeSourceTwo:" "IndexThreeExtractTwo:"
fi
if [ "$(getAromaProp "item.1.0" "/tmp/checkbox3.prop")" == "1" ]; then
    unzip -o "${ZIPFILE}" "IndexFourSourceOne:" "${INSTALLER}/"
    mv "${INSTALLER}/IndexFourSourceOne:" "IndexFourExtractOne:"
fi
if [ "$(getAromaProp "item.1.1" "/tmp/checkbox3.prop")" == "1" ]; then
    unzip -o "${ZIPFILE}" "IndexFourSourceTwo:" "${INSTALLER}/"
    mv "${INSTALLER}/IndexFourSourceTwo:" "IndexFourExtractTwo:"
fi
consolePrint "                                              "
consolePrint "              ******       ******"
consolePrint "            **********   **********"
consolePrint "          ************* *************"
consolePrint "         *****************************"
consolePrint "         *****************************"
consolePrint "         *****************************"
consolePrint "          ***************************"
consolePrint "            ***********************"
consolePrint "              *******************"
consolePrint "                ***************"
consolePrint "                  ***********"
consolePrint "                    *******"
consolePrint "                      ***"
consolePrint "                       *"
consolePrint "Thank you dear user for considering my project"
consolePrint "let us know your thoughts on our official chat."